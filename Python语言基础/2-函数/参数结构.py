#函数可以传参，也可以不传参。同理，可以有返回值，也可以没有返回值。

#1、传统参数传递
#(1)无参数传递
def func1() :
    print('这是无参数传递')

func1()

#(2)固定参数传递
def func2(x) :
    print('传递的参数为%s'%x)

func2('hello')

'''2、默认参数传递
Python的默认参数传递的机制减少了重复参数的多次输如，函数允许默认参数是大多数程序语言都支持的。

当不输入y、z的参数时，函数默认给出y=100,z='hello'的值。
但给参数赋值时要注意参数的顺序，除非表明这个数值是赋给那个参数的。

'''
def func3(x, y=100, z = 'hello') :
    print(x,y,z)
func3(0)
func3(0,1)
func3(0,34,'world')
func3(66, z='hello world')
func3(44, y=90,  z='kkk')

'''
======================================================================
对于某些函数，我们不知道传进来多少个参数，只知道对这些参数进行怎样的处理。
Python允许我们创造这样的函数，即位置参数个数的传递机制，只需要在参数前面加个'*'即可
'''
def func4(name,*args) :
    
    print(name + ' 有以下雅称：')
    
    for i in args :
        print(i)

func4('啊能','能弟','能总','能能')

'''
=======================================================================
带键参数传递是指参数通过键值对的方式进行传递。
带键参数的传递只需要在参数前面加 '**'即可。
'''
def func5(**kwargs) :
    
    print(type(kwargs))      #<class 'dict'>

    for i in kwargs :
        print(i,kwargs[i])
func5(aa=1, bb=2, cc=3)
print('-----------')
func5(x=1, y=2, z='hello')