'''
软件编程的实质：将我们的思维转变成计算机能够识别的语言的一个过程
'''

'''
什么是面向过程？

自上而下顺序执行，逐步求精；
其程序结构是按照功能划分为若干个基本模块，这些模块形成一个树状结构；
各模块之间的关系尽可能简单，在功能上相对独立；
每一个模块内部均是由顺序、选择和循环三种基本结构构成
其模块化实现的具体方法是使用子程序
程序流程在写程序时就已经决定了
'''

'''
什么是面向对象？

把数据及对数据的操作方法放在一起，作为一个相互依赖的整体————对象；
对同类对象抽象出其共性，形成类，类中的大多数数据，只能用本类的方法进行处理；
类通过一个简单的外部接口与外界发生关系，对象与对象之间通过消息进行通信；
程序流程由用户在使用中决定。
'''

'''
理解面向对象

面向对象是相对面向过程而言
面向对象和面向过程都是一种思想
面向过程：
    强调的是功能行为
    关注的是解决问题需要哪些步骤
面向对象：
    将功能封装进对象，强调具备了功能的对象
    关注的是解决问题需要哪些对象
面向对象是基于面向过程的
'''

'''
面向对象的提点

是一种符合人们思考习惯的思想
可以将复杂的事情简单化
将程序员从执行者转换成了指挥者

完成需求时：
    先要去找具有所需的功能的对象来使用。
    如果该对象不存在，那么创建一个具有所需功能的对象
'''

'''
类和对象的关系：通过类来实例化出对象

Python中使用计算机语言就是不断地的在描述现实生活中的事物(描述对象)
OC中描述事物通过类的形式体现，类是具体事物的抽象，是从概念上定义
对象即是该类食物实实在在的个体 
'''

'''
类的定义

生活中描述事物无非就是描述事物的名称/属性和行为
    如：人有身高/体重等属性，有说话/打架等行为
Python中用类来描述事物也是如此
    属性：对应类中的成员变量
    行为：对应类中的成员方法
定义类其实是在定义类中的成员(成员变量和成员方法)
拥有相同(或者类似)属性和行为的对象都可以抽象出一个类
'''

'''
类的设计只关心三样东西：
    事物名称(类名)：人(Person)
    属性：身高(height)
    行为(功能)：
'''